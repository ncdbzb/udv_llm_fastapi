"""add second doc to contest

Revision ID: 0ff9c2703fe8
Revises: d6c0776ffed5
Create Date: 2024-07-08 16:13:53.604612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0ff9c2703fe8'
down_revision: Union[str, None] = 'd6c0776ffed5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('contest', sa.Column('doc_name', sa.String(), nullable=False))
    op.add_column('request_statistic', sa.Column('received_at', sa.DateTime(), nullable=True))
    op.add_column('request_statistic', sa.Column('doc_name', sa.String(), nullable=True))
    op.drop_column('request_statistic', 'timestamp')
    op.add_column('test_system', sa.Column('answered_at', sa.DateTime(), nullable=True))
    op.drop_column('test_system', 'is_answered')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('test_system', sa.Column('is_answered', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('test_system', 'answered_at')
    op.add_column('request_statistic', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('request_statistic', 'doc_name')
    op.drop_column('request_statistic', 'received_at')
    op.drop_column('contest', 'doc_name')
    # ### end Alembic commands ###
